/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { testPartManagementCreateTestPart } from "../funcs/testPartManagementCreateTestPart.js";
import { testPartManagementDeleteTestPart } from "../funcs/testPartManagementDeleteTestPart.js";
import { testPartManagementGetTestPart } from "../funcs/testPartManagementGetTestPart.js";
import { testPartManagementSearchTestParts } from "../funcs/testPartManagementSearchTestParts.js";
import { testPartManagementUpdateTestPart } from "../funcs/testPartManagementUpdateTestPart.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class TestPartManagement extends ClientSDK {
  /**
   * Search and filter test parts within an assessment test
   *
   * @remarks
   * Get all test parts within an assessment test with support for filtering by navigation mode, submission mode, and text search. Test parts are organizational units that group sections and define testing behaviors like linear/nonlinear navigation.
   */
  async searchTestParts(
    request: operations.SearchTestPartsRequest,
    options?: RequestOptions,
  ): Promise<operations.SearchTestPartsResponse> {
    return unwrapAsync(testPartManagementSearchTestParts(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a new test part in an assessment test
   *
   * @remarks
   * Create a new test part within an assessment test. Test parts organize sections and define navigation behaviors (linear/nonlinear) and submission modes. The assessment test's XML structure is automatically updated to include the new test part.
   */
  async createTestPart(
    request: operations.CreateTestPartRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateTestPartResponse> {
    return unwrapAsync(testPartManagementCreateTestPart(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a specific test part with all its sections
   *
   * @remarks
   * Retrieve a test part by identifier including all its sections and their assessment item references. Test parts define navigation and submission behaviors for groups of sections. Supports both JSON and XML response formats.
   */
  async getTestPart(
    request: operations.GetTestPartRequest,
    options?: RequestOptions,
  ): Promise<operations.GetTestPartResponse> {
    return unwrapAsync(testPartManagementGetTestPart(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a test part's configuration and sections
   *
   * @remarks
   * Update a test part including its navigation mode, submission mode, time limits, and sections. This operation updates the entire test part structure and regenerates the parent assessment test's XML.
   */
  async updateTestPart(
    request: operations.UpdateTestPartRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateTestPartResponse> {
    return unwrapAsync(testPartManagementUpdateTestPart(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a test part and all its sections
   *
   * @remarks
   * Permanently delete a test part from an assessment test. This removes the test part and all its sections (but not the underlying assessment items). The assessment test's XML structure is automatically updated.
   */
  async deleteTestPart(
    request: operations.DeleteTestPartRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(testPartManagementDeleteTestPart(
      this,
      request,
      options,
    ));
  }
}
