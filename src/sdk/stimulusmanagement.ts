/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { stimulusManagementCreateStimulus } from "../funcs/stimulusManagementCreateStimulus.js";
import { stimulusManagementDeleteStimulus } from "../funcs/stimulusManagementDeleteStimulus.js";
import { stimulusManagementGetStimulus } from "../funcs/stimulusManagementGetStimulus.js";
import { stimulusManagementSearchStimuli } from "../funcs/stimulusManagementSearchStimuli.js";
import { stimulusManagementUpdateStimulus } from "../funcs/stimulusManagementUpdateStimulus.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class StimulusManagement extends ClientSDK {
  /**
   * Search and filter stimuli
   *
   * @remarks
   * Get all stimuli on the service provider. Search with advanced filtering capabilities. Supports text search across titles and identifiers, sorting, and pagination.
   */
  async searchStimuli(
    request?: operations.SearchStimuliRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.SearchStimuliResponse> {
    return unwrapAsync(stimulusManagementSearchStimuli(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a new stimulus
   *
   * @remarks
   * Create a new Stimulus on the service provider. Stimuli can be referenced by Assessment Items.
   */
  async createStimulus(
    request: models.Stimulus,
    options?: RequestOptions,
  ): Promise<operations.CreateStimulusResponse> {
    return unwrapAsync(stimulusManagementCreateStimulus(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a stimulus with its complete content
   *
   * @remarks
   * Get a specific Stimulus by identifier from the service provider. Stimuli can be referenced by Assessment Items to display relevant content to the learner.
   */
  async getStimulus(
    request: operations.GetStimulusRequest,
    options?: RequestOptions,
  ): Promise<operations.GetStimulusResponse> {
    return unwrapAsync(stimulusManagementGetStimulus(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a stimulus and its content
   *
   * @remarks
   * Update a Stimulus on the service provider.
   */
  async updateStimulus(
    request: operations.UpdateStimulusRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateStimulusResponse> {
    return unwrapAsync(stimulusManagementUpdateStimulus(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a stimulus
   *
   * @remarks
   * Permanently delete a stimulus. This operation cannot be undone. Warning: Assessment items that reference this stimulus may be affected. Consider checking for references before deletion.
   */
  async deleteStimulus(
    request: operations.DeleteStimulusRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(stimulusManagementDeleteStimulus(
      this,
      request,
      options,
    ));
  }
}
