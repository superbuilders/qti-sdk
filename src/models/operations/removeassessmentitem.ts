/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RemoveAssessmentItemRequest = {
  /**
   * The unique identifier of the root assessment test
   */
  assessmentTestIdentifier: string;
  /**
   * The unique identifier of the parent test part
   */
  testPartIdentifier: string;
  /**
   * The unique identifier of the target section
   */
  identifier: string;
  /**
   * The unique identifier of the assessment item reference to remove from the section
   */
  itemIdentifier: string;
};

/** @internal */
export const RemoveAssessmentItemRequest$inboundSchema: z.ZodType<
  RemoveAssessmentItemRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  assessmentTestIdentifier: z.string(),
  testPartIdentifier: z.string(),
  identifier: z.string(),
  itemIdentifier: z.string(),
});

/** @internal */
export type RemoveAssessmentItemRequest$Outbound = {
  assessmentTestIdentifier: string;
  testPartIdentifier: string;
  identifier: string;
  itemIdentifier: string;
};

/** @internal */
export const RemoveAssessmentItemRequest$outboundSchema: z.ZodType<
  RemoveAssessmentItemRequest$Outbound,
  z.ZodTypeDef,
  RemoveAssessmentItemRequest
> = z.object({
  assessmentTestIdentifier: z.string(),
  testPartIdentifier: z.string(),
  identifier: z.string(),
  itemIdentifier: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveAssessmentItemRequest$ {
  /** @deprecated use `RemoveAssessmentItemRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveAssessmentItemRequest$inboundSchema;
  /** @deprecated use `RemoveAssessmentItemRequest$outboundSchema` instead. */
  export const outboundSchema = RemoveAssessmentItemRequest$outboundSchema;
  /** @deprecated use `RemoveAssessmentItemRequest$Outbound` instead. */
  export type Outbound = RemoveAssessmentItemRequest$Outbound;
}

export function removeAssessmentItemRequestToJSON(
  removeAssessmentItemRequest: RemoveAssessmentItemRequest,
): string {
  return JSON.stringify(
    RemoveAssessmentItemRequest$outboundSchema.parse(
      removeAssessmentItemRequest,
    ),
  );
}

export function removeAssessmentItemRequestFromJSON(
  jsonString: string,
): SafeParseResult<RemoveAssessmentItemRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RemoveAssessmentItemRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveAssessmentItemRequest' from JSON`,
  );
}
