/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { QtiError } from "./qtierror.js";

/**
 * Internal server error response
 */
export type DeleteStimulusInternalServerErrorData = {
  /**
   * Error type identifier
   */
  error: string;
  /**
   * Human-readable error message
   */
  message: string;
  /**
   * Sentry event ID for error tracking
   */
  eventId?: string | undefined;
  /**
   * Stack trace or additional error details
   */
  details: string;
};

/**
 * Internal server error response
 */
export class DeleteStimulusInternalServerError extends QtiError {
  /**
   * Error type identifier
   */
  error: string;
  /**
   * Sentry event ID for error tracking
   */
  eventId?: string | undefined;
  /**
   * Stack trace or additional error details
   */
  details: string;

  /** The original data that was passed to this error instance. */
  data$: DeleteStimulusInternalServerErrorData;

  constructor(
    err: DeleteStimulusInternalServerErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;
    if (err.eventId != null) this.eventId = err.eventId;
    this.details = err.details;

    this.name = "DeleteStimulusInternalServerError";
  }
}

/**
 * Stimulus not found
 */
export type DeleteStimulusNotFoundErrorData = {
  error: string;
};

/**
 * Stimulus not found
 */
export class DeleteStimulusNotFoundError extends QtiError {
  error: string;

  /** The original data that was passed to this error instance. */
  data$: DeleteStimulusNotFoundErrorData;

  constructor(
    err: DeleteStimulusNotFoundErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "DeleteStimulusNotFoundError";
  }
}

/** @internal */
export const DeleteStimulusInternalServerError$inboundSchema: z.ZodType<
  DeleteStimulusInternalServerError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.string(),
  message: z.string(),
  eventId: z.string().optional(),
  details: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new DeleteStimulusInternalServerError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type DeleteStimulusInternalServerError$Outbound = {
  error: string;
  message: string;
  eventId?: string | undefined;
  details: string;
};

/** @internal */
export const DeleteStimulusInternalServerError$outboundSchema: z.ZodType<
  DeleteStimulusInternalServerError$Outbound,
  z.ZodTypeDef,
  DeleteStimulusInternalServerError
> = z.instanceof(DeleteStimulusInternalServerError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.string(),
    message: z.string(),
    eventId: z.string().optional(),
    details: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteStimulusInternalServerError$ {
  /** @deprecated use `DeleteStimulusInternalServerError$inboundSchema` instead. */
  export const inboundSchema = DeleteStimulusInternalServerError$inboundSchema;
  /** @deprecated use `DeleteStimulusInternalServerError$outboundSchema` instead. */
  export const outboundSchema =
    DeleteStimulusInternalServerError$outboundSchema;
  /** @deprecated use `DeleteStimulusInternalServerError$Outbound` instead. */
  export type Outbound = DeleteStimulusInternalServerError$Outbound;
}

/** @internal */
export const DeleteStimulusNotFoundError$inboundSchema: z.ZodType<
  DeleteStimulusNotFoundError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new DeleteStimulusNotFoundError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type DeleteStimulusNotFoundError$Outbound = {
  error: string;
};

/** @internal */
export const DeleteStimulusNotFoundError$outboundSchema: z.ZodType<
  DeleteStimulusNotFoundError$Outbound,
  z.ZodTypeDef,
  DeleteStimulusNotFoundError
> = z.instanceof(DeleteStimulusNotFoundError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteStimulusNotFoundError$ {
  /** @deprecated use `DeleteStimulusNotFoundError$inboundSchema` instead. */
  export const inboundSchema = DeleteStimulusNotFoundError$inboundSchema;
  /** @deprecated use `DeleteStimulusNotFoundError$outboundSchema` instead. */
  export const outboundSchema = DeleteStimulusNotFoundError$outboundSchema;
  /** @deprecated use `DeleteStimulusNotFoundError$Outbound` instead. */
  export type Outbound = DeleteStimulusNotFoundError$Outbound;
}
