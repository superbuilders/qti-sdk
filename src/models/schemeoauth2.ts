/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type SchemeOAuth2 = {
  clientID: string;
  clientSecret: string;
  tokenURL?: string | undefined;
};

/** @internal */
export const SchemeOAuth2$inboundSchema: z.ZodType<
  SchemeOAuth2,
  z.ZodTypeDef,
  unknown
> = z.object({
  clientID: z.string(),
  clientSecret: z.string(),
  tokenURL: z.string().default(
    "https://alpha-auth-production-idp.auth.us-west-2.amazoncognito.com/oauth2/token",
  ),
});

/** @internal */
export type SchemeOAuth2$Outbound = {
  clientID: string;
  clientSecret: string;
  tokenURL: string;
};

/** @internal */
export const SchemeOAuth2$outboundSchema: z.ZodType<
  SchemeOAuth2$Outbound,
  z.ZodTypeDef,
  SchemeOAuth2
> = z.object({
  clientID: z.string(),
  clientSecret: z.string(),
  tokenURL: z.string().default(
    "https://alpha-auth-production-idp.auth.us-west-2.amazoncognito.com/oauth2/token",
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SchemeOAuth2$ {
  /** @deprecated use `SchemeOAuth2$inboundSchema` instead. */
  export const inboundSchema = SchemeOAuth2$inboundSchema;
  /** @deprecated use `SchemeOAuth2$outboundSchema` instead. */
  export const outboundSchema = SchemeOAuth2$outboundSchema;
  /** @deprecated use `SchemeOAuth2$Outbound` instead. */
  export type Outbound = SchemeOAuth2$Outbound;
}

export function schemeOAuth2ToJSON(schemeOAuth2: SchemeOAuth2): string {
  return JSON.stringify(SchemeOAuth2$outboundSchema.parse(schemeOAuth2));
}

export function schemeOAuth2FromJSON(
  jsonString: string,
): SafeParseResult<SchemeOAuth2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SchemeOAuth2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SchemeOAuth2' from JSON`,
  );
}
