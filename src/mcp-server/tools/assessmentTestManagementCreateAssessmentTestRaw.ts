/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { assessmentTestManagementCreateAssessmentTestRaw } from "../../funcs/assessmentTestManagementCreateAssessmentTestRaw.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
    z.instanceof(Uint8Array),
  ]),
};

export const tool$assessmentTestManagementCreateAssessmentTestRaw:
  ToolDefinition<typeof args> = {
    name: "assessment-test-management-create-assessment-test-raw",
    description: `Create a new assessment test

Create a new assessment test. Supports both JSON and XML formats.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await assessmentTestManagementCreateAssessmentTestRaw(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
