/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assessmentItemManagementCreateAssessmentItem } from "../../funcs/assessmentItemManagementCreateAssessmentItem.js";
import * as models from "../../models/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: models.AssessmentItem$inboundSchema.optional(),
};

export const tool$assessmentItemManagementCreateAssessmentItem: ToolDefinition<
  typeof args
> = {
  name: "assessment-item-management-create-assessment-item",
  description: `Create a new assessment item

Create a new assessment item (question) with its content, interactions, and response processing rules. Assessment items can contain various question types like multiple choice, text entry, or complex interactions. Supports both JSON and XML input formats with automatic QTI XML generation and validation.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await assessmentItemManagementCreateAssessmentItem(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
