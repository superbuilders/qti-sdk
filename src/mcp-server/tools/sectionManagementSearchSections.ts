/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { sectionManagementSearchSections } from "../../funcs/sectionManagementSearchSections.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.SearchSectionsRequest$inboundSchema,
};

export const tool$sectionManagementSearchSections: ToolDefinition<typeof args> =
  {
    name: "section-management-search-sections",
    description: `Search sections within a test part

Get all sections within a specific test part with support for text search, sorting, and pagination. Sections are containers that group related assessment items and define their presentation order.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await sectionManagementSearchSections(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
