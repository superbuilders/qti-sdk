/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assessmentItemManagementSearchAssessmentItems } from "../../funcs/assessmentItemManagementSearchAssessmentItems.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.SearchAssessmentItemsRequest$inboundSchema.optional(),
};

export const tool$assessmentItemManagementSearchAssessmentItems: ToolDefinition<
  typeof args
> = {
  name: "assessment-item-management-search-assessment-items",
  description: `Search and filter assessment items

Search and retrieve assessment items (questions) with advanced filtering capabilities. Supports text search across titles and identifiers, filtering by type, sorting, and pagination. Assessment items are the core content units that contain questions, answer choices, and scoring logic.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await assessmentItemManagementSearchAssessmentItems(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
