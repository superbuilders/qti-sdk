/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assessmentTestManagementSearchAssessmentTests } from "../../funcs/assessmentTestManagementSearchAssessmentTests.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.SearchAssessmentTestsRequest$inboundSchema.optional(),
};

export const tool$assessmentTestManagementSearchAssessmentTests: ToolDefinition<
  typeof args
> = {
  name: "assessment-test-management-search-assessment-tests",
  description: `Search and filter assessment tests

Search and retrieve assessment tests with advanced filtering capabilities. Supports text search across titles and identifiers, filtering by navigation/submission modes, and pagination. Assessment tests are the top-level containers that define complete testing experiences through their test parts and sections.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await assessmentTestManagementSearchAssessmentTests(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
